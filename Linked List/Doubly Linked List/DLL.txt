A doubly linked list is a linear data structure where each node contains pointers to both its previous and next nodes, allowing traversal in both directions.

Structure of a Node:
1. Data: The value stored in the node.
2. Previous Pointer: Points to the previous node in the list.
3. Next Pointer: Points to the next node in the list.


Key Characteristics:
1. Allows bidirectional traversal.
2. Each node has pointers for both previous and next nodes.
3. The list starts with a "head" pointer and ends with a "tail" pointer, where the `prev` pointer of the head and the `next` pointer of the tail are NULL.


Operations and Their Complexities:

-----------------------------------------------------
| Operation              | Time Complexity | Space Complexity |
-----------------------------------------------------
| Traversal              | O(n)           | O(1)             |
| Search (unsorted)      | O(n)           | O(1)             |
| Insert at Beginning    | O(1)           | O(1)             |
| Insert at End          | O(1)           | O(1)             |
| Insert at a Position   | O(n)           | O(1)             |
| Delete from Beginning  | O(1)           | O(1)             |
| Delete from End        | O(1)           | O(1)             |
| Delete by Value        | O(n)           | O(1)             |
-----------------------------------------------------
